name: CI
on:
  push:
    branches:
      - main
permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: modules
      - uses: leafo/gh-actions-lua@v8.0.0
        with:
          luaVersion: 5.2
      - uses: leafo/gh-actions-luarocks@v4.0.0
      - uses: actions/checkout@v3
        with:
          repository: LiliaFramework/GluaCheck
          path: luacheck
      - run: luarocks make
        working-directory: luacheck
      - run: |
          luacheck . \
            --no-redefined \
            --no-global --no-self \
            --no-max-line-length --no-max-code-line-length \
            --no-max-string-line-length --no-max-comment-line-length
        working-directory: modules

  bump-version:
    needs: linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: bump
        shell: bash
        run: |
          set -e
          base="${{ github.event.before }}"
          changed_dirs=$(git diff --name-only "$base" "$GITHUB_SHA" | awk -F/ '{print $1}' | sort -u)
          for dir in $changed_dirs; do
            f="$dir/module.lua"
            [ -f "$f" ] || continue
            v=$(grep -Eo 'MODULE\.version\s*=\s*[0-9]+(\.[0-9]{2})?' "$f" | awk -F= '{print $2}' | tr -d '[:space:]')
            [ -z "$v" ] && v="1.00"
            if [[ $v == *.* ]]; then
              major="${v%%.*}"
              minor="${v##*.}"
            else
              major="$v"
              minor="00"
            fi
            minor=$((10#$minor + 1))
            if [ $minor -eq 100 ]; then
              minor=0
              major=$((major + 1))
            fi
            if [ $minor -eq 0 ]; then
              n="$major"
            else
              n=$(printf "%d.%02d" "$major" "$minor")
            fi
            if grep -q 'MODULE\.version' "$f"; then
              sed -i -E "s/(MODULE\.version\s*=\s*)[0-9]+(\.[0-9]{2})?/\1$n/" "$f"
            else
              printf '\nMODULE.version = %s\n' "$n" >> "$f"
            fi
            git add "$f"
          done
          if ! git diff --cached --quiet; then
            git config user.email "githubactions@github.com"
            git config user.name "GitHub Actions"
            git commit -m "Updated Modules Versions"
            git push origin HEAD:main
          fi

  scrape-modules:
    needs: linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
      - run: sudo apt-get update && sudo apt-get install -y jq zip
      - run: |
          echo "[]" > modules_data.json
          for m in */module.lua; do
            [ -f "$m" ] || continue
            name=$(grep -Po 'MODULE\.name\s*=\s*"[^"]*"' "$m" | sed -E 's/.*=\s*"([^"]+)".*/\1/')
            author=$(grep -Po 'MODULE\.author\s*=\s*"[^"]*"' "$m" | sed -E 's/.*=\s*"([^"]+)".*/\1/')
            discord=$(grep -Po 'MODULE\.discord\s*=\s*"[^"]*"' "$m" | sed -E 's/.*=\s*"([^"]+)".*/\1/')
            desc=$(grep -Po 'MODULE\.desc\s*=\s*"[^"]*"' "$m" | sed -E 's/.*=\s*"([^"]+)".*/\1/')
            version=$(grep -Po 'MODULE\.version\s*=\s*([0-9]+(\.[0-9]{2})?)' "$m" | sed -E 's/.*=\s*([0-9]+(\.[0-9]{2})?)/\1/' || echo "0.00")
            rawf=$(grep -Po 'MODULE\.Features\s*=\s*(\{[^}]*\}|"[^"]*")' "$m" | head -n1 | sed -E 's/MODULE\.Features\s*=\s*//')
            if [ -n "$rawf" ]; then
              if [[ $rawf == \{* ]]; then
                rawf=$(echo "$rawf" | sed -E 's/,\s*}$/}/')
                feat=$(echo "$rawf" | sed -E 's/^\{(.*)\}$/[\1]/')
              else
                feat="[$rawf]"
              fi
            else
              feat="[]"
            fi
            raww=$(grep -Po 'MODULE\.WorkshopContent\s*=\s*(\{[^}]*\}|"[^"]*")' "$m" | head -n1 | sed -E 's/MODULE\.WorkshopContent\s*=\s*//')
            if [ -n "$raww" ]; then
              if [[ $raww == \{* ]]; then
                raww=$(echo "$raww" | sed -E 's/,\s*}$/}/')
                work=$(echo "$raww" | sed -E 's/^\{(.*)\}$/[\1]/')
              else
                work="[$raww]"
              fi
            else
              work="[]"
            fi
            folder=$(basename "$(dirname "$m")")
            download="https://github.com/LiliaFramework/Modules/raw/refs/heads/gh-pages/${folder}.zip"
            source="https://liliaframework.github.io/Modules/${folder}.html"
            jq --arg name "$name" \
               --arg author "$author" \
               --arg discord "$discord" \
               --arg desc "$desc" \
               --arg version "$version" \
               --arg download "$download" \
               --arg source "$source" \
               --arg public_uniqueID "$folder" \
               --argjson features "$feat" \
               --argjson workshop "$work" \
               '. += [{name:$name,author:$author,discord:$discord,description:$desc,version:$version,download:$download,source:$source,public_uniqueID:$public_uniqueID,features:$features,workshop:$workshop}]' modules_data.json > tmp.json
            mv tmp.json modules_data.json
          done
      - run: |
          for d in */; do
            [ -d "$d" ] && zip -r "${d%/}.zip" "$d"
          done
      - run: node scrap_modules.js
      - run: |
          git clone https://x-access-token:${{ secrets.LiliaGitSecret }}@github.com/LiliaFramework/Lilia.git lilia
          mkdir -p lilia/documentation
          cp documentation/modules.md lilia/documentation/modules.md
          cd lilia
          git config user.email "githubactions@github.com"
          git config user.name "GitHub Actions"
          git add documentation/modules.md
          if ! git diff --cached --quiet; then
            git commit -m "Update modules summary"
            git push https://x-access-token:${{ secrets.LiliaGitSecret }}@github.com/LiliaFramework/Lilia.git HEAD:main
          fi
      - run: mv modules_data.json modules.json
      - run: |
          git clone https://x-access-token:${{ secrets.LiliaGitSecret }}@github.com/LiliaFramework/LiliaFramework.github.io.git website
          cp modules.json website/modules.json
          cd website
          git config user.email "githubactions@github.com"
          git config user.name "GitHub Actions"
          git add modules.json
          if ! git diff --cached --quiet; then
            git commit -m "Update modules.json with source URLs"
            git push https://x-access-token:${{ secrets.LiliaGitSecret }}@github.com/LiliaFramework/LiliaFramework.github.io.git HEAD:main
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: module-zips
          path: ./*.zip
      - uses: actions/upload-artifact@v4
        with:
          name: modules-json
          path: modules.json

  gh-pages:
    needs: scrape-modules
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: mkdir -p documentation
      - uses: actions/download-artifact@v4
        with:
          name: module-zips
          path: documentation
      - uses: actions/download-artifact@v4
        with:
          name: modules-json
          path: documentation
      - run: |
          for z in documentation/*.zip; do
            f=$(basename "$z" .zip)
            unzip "$z" -d "extracted_${f}"
          done
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.LiliaGitSecret }}
          publish_branch: gh-pages
          publish_dir: documentation
          force_orphan: true
      - uses: actions/upload-artifact@v4
        with:
          name: built-docs
          path: documentation

  upload-docs:
    needs: gh-pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: built-docs
          path: built-docs
      - uses: actions/checkout@v3
        with:
          repository: LiliaFramework/Lilia
          token: ${{ secrets.LiliaGitSecret }}
          path: lilia
          fetch-depth: 0
      - run: |
          mkdir -p lilia/documentation/docs
          cp -R built-docs/. lilia/documentation/docs
      - run: |
          cd lilia
          git config user.email "githubactions@github.com"
          git config user.name "GitHub Actions"
          git add documentation/docs
          if ! git diff --cached --quiet; then
            git commit -m "Update Module Documentation"
            git push https://x-access-token:${{ secrets.LiliaGitSecret }}@github.com/LiliaFramework/Lilia.git HEAD:main
          fi