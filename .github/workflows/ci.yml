name: CI

on: [push, pull_request]

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Lilia Repository
        uses: actions/checkout@v3
        with:
          path: modules
      - name: Set Up Lua
        uses: leafo/gh-actions-lua@v8.0.0
        with:
          luaVersion: "5.2"
      - name: Set Up Luarocks
        uses: leafo/gh-actions-luarocks@v4.0.0
      - name: Pull GluaCheck
        uses: actions/checkout@v3
        with:
          repository: LiliaFramework/GluaCheck
          path: luacheck
      - name: Build GluaCheck
        working-directory: luacheck
        run: luarocks make
      - name: Run Luacheck Linting
        working-directory: modules
        run: |
          luacheck . \
            --no-redefined \
            --no-global --no-self \
            --no-max-line-length --no-max-code-line-length \
            --no-max-string-line-length --no-max-comment-line-length

  formatter:
    runs-on: ubuntu-latest
    needs: linter
    steps:
      - name: Checkout Lilia Repository
        uses: actions/checkout@v3
        with:
          path: modules
      - name: Download and Install GLuaLint
        run: |
          curl -L -o glualint.zip https://github.com/FPtje/GLuaFixer/releases/download/1.29.0/glualint-1.29.0-x86_64-linux.zip
          unzip glualint.zip -d glualint_folder
          chmod +x glualint_folder/glualint
          sudo mv glualint_folder/glualint /usr/local/bin
          rm -rf glualint.zip glualint_folder
      - name: Run GLuaLint for Pretty Printing
        working-directory: modules
        run: glualint --pretty-print .
      - name: Configure Git
        run: |
          git config --global user.email "githubactions@github.com"
          git config --global user.name "GitHub Actions"
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.LiliaGitSecret }}
        working-directory: modules
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Pretty Printed"
            git push https://${{ secrets.LiliaGitSecret }}@github.com/${{ github.repository }}.git main
          else
            echo "No changes to commit"
          fi

  scrape-modules:
    runs-on: ubuntu-latest
    needs: formatter
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Extract and Rename Module Fields
        run: |
          find modules -type f -name "module.lua" -exec grep -E "MODULE\.name|MODULE\.discord|MODULE\.desc" {} \; | \
          sed -E 's/^\xef\xbb\xbf//' | \
          sed -E 's/MODULE\.name/Name/g; s/MODULE\.discord/Author/g; s/MODULE\.desc/Description/g' | \
          sed 's/[\x00-\x1F\x7F]//g' > modules.txt
      - name: Zip Each Module Folder
        run: |
          for folder in modules/*; do
            if [ -d "$folder" ]; then
              base=$(basename "$folder")
              (cd modules && zip -r "${base}.zip" "${base}")
            fi
          done
      - name: Configure Git Identity
        run: |
          git config --global user.email "githubactions@github.com"
          git config --global user.name "GitHub Actions"
      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.LiliaGitSecret }}
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add modules.txt modules/*.zip
            git commit -m "Update modules.txt and ZIPs"
            git push https://${{ secrets.LiliaGitSecret }}@github.com/${{ github.repository }}.git main
          else
            echo "No changes to commit"
          fi

  gh-pages:
    runs-on: ubuntu-latest
    needs: scrape-modules
    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Generate site
        run: node docs/docsparser.js
      - name: Commit and push to gh-pages
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -B gh-pages
          git add docs
          git commit -m "Publish site"
          git push -f origin gh-pages
