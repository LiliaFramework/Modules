name: CI

on: [push, pull_request]

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Lilia Repository
        uses: actions/checkout@v3
        with:
          path: modules

      - name: Set Up Lua
        uses: leafo/gh-actions-lua@v8.0.0
        with:
          luaVersion: "5.2"

      - name: Set Up Luarocks
        uses: leafo/gh-actions-luarocks@v4.0.0

      - name: Pull GluaCheck
        uses: actions/checkout@v3
        with:
          repository: LiliaFramework/GluaCheck
          path: luacheck

      - name: Build GluaCheck
        working-directory: luacheck
        run: luarocks make

      - name: Run Luacheck Linting
        working-directory: modules
        run: |
          luacheck . \
            --no-redefined \
            --no-global --no-self \
            --no-max-line-length --no-max-code-line-length \
            --no-max-string-line-length --no-max-comment-line-length

  formatter:
    runs-on: ubuntu-latest
    needs: linter
    steps:
      - name: Checkout Lilia Repository
        uses: actions/checkout@v3
        with:
          path: modules

      - name: Download and Install GLuaLint
        run: |
          curl -L -o glualint.zip https://github.com/FPtje/GLuaFixer/releases/download/1.29.0/glualint-1.29.0-x86_64-linux.zip
          unzip glualint.zip -d glualint_folder
          chmod +x glualint_folder/glualint
          sudo mv glualint_folder/glualint /usr/local/bin
          rm -rf glualint.zip glualint_folder

      - name: Run GLuaLint for Pretty Printing
        working-directory: modules
        run: glualint --pretty-print .

      - name: Configure Git
        run: |
          git config --global user.email "githubactions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.LiliaGitSecret }}
        working-directory: modules
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Pretty Printed"
            git push https://${{ secrets.LiliaGitSecret }}@github.com/${{ github.repository }}.git main
          else
            echo "No changes to commit"
          fi

  scrape-modules:
    runs-on: ubuntu-latest
    needs: formatter
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Extract and Rename Module Fields
        run: |
          # Find all module.lua files under the modules directory and extract lines
          # containing MODULE.name, MODULE.discord, or MODULE.desc.
          # Then replace:
          #   MODULE.name   -> Name
          #   MODULE.discord -> Author
          #   MODULE.desc   -> Description
          # Also, remove any BOM and non-printable characters.
          find modules -type f -name "module.lua" -exec grep -E "MODULE\.name|MODULE\.discord|MODULE\.desc" {} \; | \
          sed -E 's/^\xef\xbb\xbf//' | \
          sed -E 's/MODULE\.name/Name/g; s/MODULE\.discord/Author/g; s/MODULE\.desc/Description/g' | \
          sed 's/[\x00-\x1F\x7F]//g' > modules.txt

      - name: Configure Git Identity
        run: |
          git config --global user.email "githubactions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.LiliaGitSecret }}
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add modules.txt
            git commit -m "Update modules.txt with Name, Author and Description"
            git push https://${{ secrets.LiliaGitSecret }}@github.com/${{ github.repository }}.git main
          else
            echo "No changes to commit"
          fi