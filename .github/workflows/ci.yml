name: CI
on: [push, pull_request]

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: modules
      - uses: leafo/gh-actions-lua@v8.0.0
        with:
          luaVersion: 5.2
      - uses: leafo/gh-actions-luarocks@v4.0.0
      - uses: actions/checkout@v3
        with:
          repository: LiliaFramework/GluaCheck
          path: luacheck
      - run: luarocks make
        working-directory: luacheck
      - run: |
          luacheck . \
            --no-redefined \
            --no-global --no-self \
            --no-max-line-length --no-max-code-line-length \
            --no-max-string-line-length --no-max-comment-line-length
        working-directory: modules

  formatter:
    needs: linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: modules
      - run: |
          curl -L -o glualint.zip https://github.com/FPtje/GLuaFixer/releases/download/1.29.0/glualint-1.29.0-x86_64-linux.zip
          unzip glualint.zip -d tmp && chmod +x tmp/glualint && sudo mv tmp/glualint /usr/local/bin
          rm -rf glualint.zip tmp
      - run: glualint --config glualint.json --pretty-print-files .
        working-directory: modules
      - run: |
          git config user.email "githubactions@github.com"
          git config user.name "GitHub Actions"
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Pretty Printed"
            git push https://${{ secrets.LiliaGitSecret }}@github.com/${{ github.repository }}.git main
          fi
        working-directory: modules

  scrape-modules:
    needs: formatter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: sudo apt-get update && sudo apt-get install -y jq zip
      - run: |
          echo "[]" > modules.json
          for module in */module.lua; do
            name=$(grep -Po '(?<=MODULE\.name\s*=\s*")[^"]+' "$module" || echo "")
            author=$(grep -Po '(?<=MODULE\.Author\s*=\s*")[^"]+' "$module" || echo "")
            desc=$(grep -Po '(?<=MODULE\.Description\s*=\s*")[^"]+' "$module" || echo "")
            version=$(grep -Po '(?<=MODULE\.Version\s*=\s*")[^"]+' "$module" || echo "1.0")
            folder=$(basename "$(dirname "$module")")
            download="Downloads/${folder}.zip"
            jq --arg name "$name" \
               --arg author "$author" \
               --arg desc "$desc" \
               --arg version "$version" \
               --arg download "$download" \
               '. += [{"name":$name,"author":$author,"description":$desc,"version":$version,"download":$download}]' modules.json > tmp.json
            mv tmp.json modules.json
          done
      - run: |
          for folder in */; do
            [ -d "$folder" ] && zip -r "${folder%/}.zip" "$folder"
          done
      - run: |
          git config user.email "githubactions@github.com"
          git config user.name "GitHub Actions"
          git add modules.json
          if ! git diff --cached --quiet; then
            git commit -m "Update modules.json"
            git push -f https://${{ secrets.LiliaGitSecret }}@github.com/${{ github.repository }}.git main
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: module-zips
          path: ./*.zip

  gh-pages:
    needs: scrape-modules
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: module-zips
          path: docs/Downloads
      - run: |
          for zip in docs/Downloads/*.zip; do
            folder=$(basename "$zip" .zip)
            unzip "$zip" -d "extracted_${folder}"
          done
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Generate Site
        run: node docsparser.js
      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.LiliaGitSecret }}
          publish_branch: gh-pages
          publish_dir: ./docs
          force_orphan: true